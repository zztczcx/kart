// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: coupons.sql

package sqlc

import (
	"context"
)

const getCoupon = `-- name: GetCoupon :one
SELECT code, presence_mask, created_at, updated_at FROM coupons WHERE code = $1
`

func (q *Queries) GetCoupon(ctx context.Context, code string) (Coupon, error) {
	row := q.db.QueryRowContext(ctx, getCoupon, code)
	var i Coupon
	err := row.Scan(
		&i.Code,
		&i.PresenceMask,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const tryRedeemSingleUse = `-- name: TryRedeemSingleUse :one
INSERT INTO coupon_redemptions (code)
VALUES ($1)
ON CONFLICT DO NOTHING
RETURNING code
`

func (q *Queries) TryRedeemSingleUse(ctx context.Context, code string) (string, error) {
	row := q.db.QueryRowContext(ctx, tryRedeemSingleUse, code)
	err := row.Scan(&code)
	return code, err
}
